XML 
<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="clase2.xsl"?>
<library>
    <book>
        <title>The Great Gatsby</title>
        <author>F. Scott Fitzgerald</author>
        <genre>Novel</genre>
        <price>12.99</price>
        <available>true</available>
        <reviews>
            <review>
                <user>reader1</user>
                <comment>One of the greatest novels of the 20th century.</comment>
            </review>
            <review>
                <user>reader2</user>
                <comment>A timeless classic that everyone should read.</comment>
            </review>
        </reviews>
    </book>
    <book>
        <title>To Kill a Mockingbird</title>
        <author>Harper Lee</author>
        <genre>Novel</genre>
        <price>10.99</price>
        <available>false</available>
        <reviews>
            <review>
                <user>reader3</user>
                <comment>An essential read for understanding humanity.</comment>
            </review>
            <review>
                <user>reader4</user>
                <comment>A beautifully written book that tackles important issues.</comment>
            </review>
        </reviews>
    </book>
    <book>
        <title>1984</title>
        <author>George Orwell</author>
        <genre>Dystopian Fiction</genre>
        <price>9.99</price>
        <available>true</available>
        <reviews>
            <review>
                <user>reader5</user>
                <comment>A chilling portrayal of a totalitarian society.</comment>
            </review>
            <review>
                <user>reader6</user>
                <comment>Still relevant today, a must-read for everyone.</comment>
            </review>
        </reviews>
    </book>
    <book>
        <title>The Catcher in the Rye</title>
        <author>J.D. Salinger</author>
        <genre>Coming-of-age Novel</genre>
        <price>11.50</price>
        <available>true</available>
        <reviews>
            <review>
                <user>reader7</user>
                <comment>An iconic novel capturing the essence of teenage rebellion.</comment>
            </review>
            <review>
                <user>reader8</user>
                <comment>Holden Caulfield's voice is unforgettable.</comment>
            </review>
        </reviews>
    </book>
    <book>
        <title>The Hobbit</title>
        <author>J.R.R. Tolkien</author>
        <genre>Fantasy</genre>
        <price>14.25</price>
        <available>true</available>
        <reviews>
            <review>
                <user>reader9</user>
                <comment>A delightful adventure suitable for readers of all ages.</comment>
            </review>
            <review>
                <user>reader10</user>
                <comment>Tolkien's world-building is unmatched.</comment>
            </review>
        </reviews>
    </book>
    <book>
        <title>Pride and Prejudice</title>
        <author>Jane Austen</author>
        <genre>Classic</genre>
        <price>8.75</price>
        <available>true</available>
        <reviews>
            <review>
                <user>reader11</user>
                <comment>A timeless romance that never fails to captivate.</comment>
            </review>
            <review>
                <user>reader12</user>
                <comment>Austen's wit shines through every page.</comment>
            </review>
        </reviews>
    </book>
    <book>
        <title>The Lord of the Rings</title>
        <author>J.R.R. Tolkien</author>
        <genre>Fantasy</genre>
        <price>19.99</price>
        <available>true</available>
        <reviews>
            <review>
                <user>reader13</user>
                <comment>An epic masterpiece that defines the fantasy genre.</comment>
            </review>
            <review>
                <user>reader14</user>
                <comment>Tolkien's world is richly imagined and deeply immersive.</comment>
            </review>
        </reviews>
    </book>
</library>

Enunciado

Una librería tiene una base de datos con los libros de su catálogo, recogidos en ‘Clase.xml’, cada libro tiene asociado su título, autor, género novelístico, precio, disposición y reviews realizadas por críticos.

A partir de estos datos, se pide realizar un documento xsl para la organización de los libros con el siguiente formato:

Apartado A

Título html con el texto “Library Catalog”

Título del libro con un tamaño un poco menor.

Autor del libro y género de este separados con un guión (-)

Precio del libro acompañado del símbolo del dólar ($) (hay que tener en cuenta que este símbolo se pone delante del número al contrario que el euro que se pone detrás)

Estado del libro: En caso de estar disponible, se mostrará el texto “Avaliable” recoloreado a verde (código: #30ff06), en caso contrario, el texto a mostrar será “Out of Stock” recoloreado a rojo (código: #ff0606)

Por último, usaremos otro título de sección menor para presentar las Reviews con ese mismo texto

Dentro de esta sección deberán aparecer todas las revies de las que disponga el libro con el formato de una lista desordenada, en caso de añadirse más reviews, el documento debe mostrarlas sin necesidad de realizar cambios en el código.

XSLT 
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <!-- Plantilla para el documento HTML -->
  <xsl:template match="/">
    <html>
      <head>
        <title>Library Catalog</title>
      </head>
      <body>
        <!-- Título principal -->
        <h1>Library Catalog</h1>
        
        <!-- Iterar sobre cada libro -->
        <xsl:apply-templates select="library/book"/>
      </body>
    </html>
  </xsl:template>

  <!-- Plantilla para la información de cada libro -->
  <xsl:template match="book">
    <div>
      <!-- Título del libro -->
      <h2>
        <xsl:value-of select="title"/>
      </h2>
      <!-- Autor y género -->
      <p>
        <xsl:value-of select="author"/> - <xsl:value-of select="genre"/>
      </p>
      <!-- Precio -->
      <p>
        <xsl:text>$</xsl:text><xsl:value-of select="price"/>
      </p>
      <!-- Estado del libro -->
      <p>
        <xsl:choose>
          <xsl:when test="available='true'">
            <span style="color: #30ff06">Available</span>
          </xsl:when>
          <xsl:otherwise>
            <span style="color: #ff0606">Out of Stock</span>
          </xsl:otherwise>
        </xsl:choose>
      </p>
      <!-- Título de las reviews -->
      <h3>Reviews</h3>
      <!-- Lista de reviews -->
      <ul>
        <xsl:apply-templates select="reviews/review"/>
      </ul>
    </div>
  </xsl:template>

  <!-- Plantilla para cada review -->
  <xsl:template match="review">
    <li>
      <xsl:value-of select="concat(user, ': ', comment)"/>
    </li>
  </xsl:template>

</xsl:stylesheet>

Apartado B

Se pide una tabla organizada con un borde de una anchura razonable.

Las celdas deben estar gobernadas por las cabeceras ‘Title’, ‘Author’, ‘Genre’, ‘Price’, ‘Availability’ y ‘Reviews’ en ese orden.

El contenido de la tabla estará estipulado por la cantidad de libros existentes en el documento, en caso de añadirse más libros, el documento debe mostrarlos sin necesidad de realizar cambios en el código.

Por cada libro encontrado, deberán rellenarse las celdas con su respectivo valor (Title → elemento title, Author → elemento author, etc.).

Las celdas ‘Price’ debe ir acompañada, al igual que el apartado anterior con el símbolo del dólar $ (hay que tener en cuenta que este símbolo se pone delante del número al contrario que el euro que se pone detrás).

Las celdas ‘Avaliability’, dependiendo de su disponibilidad, deberán mostrar el texto “Avaliable” en verde (en caso de estar disponibles) o “Out of Stock” en rojo (en caso de no estarlo) igual que el apartado anterior.

Las celdas ‘Reviews’ deben contener una lista desordenada con cada review archivada sobre el libro, en caso de añadirse nuevas reviews el documento debe mostrarlos sin necesidad de realizar cambios en el código.

XSLT
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <!-- Plantilla para el documento HTML -->
  <xsl:template match="/">
    <html>
      <head>
        <title>Library Catalog</title>
        <style>
          table {
            border-collapse: collapse;
            width: 100%;
          }
          th, td {
            border: 1px solid black;
            padding: 8px;
            text-align: left;
          }
          th {
            background-color: #f2f2f2;
          }
          .available {
            color: #30ff06;
          }
          .out-of-stock {
            color: #ff0606;
          }
        </style>
      </head>
      <body>
        <!-- Título principal -->
        <h1>Library Catalog</h1>
        
        <!-- Tabla de libros -->
        <table>
          <tr>
            <th>Title</th>
            <th>Author</th>
            <th>Genre</th>
            <th>Price</th>
            <th>Availability</th>
            <th>Reviews</th>
          </tr>
          <!-- Iterar sobre cada libro -->
          <xsl:apply-templates select="library/book"/>
        </table>
      </body>
    </html>
  </xsl:template>

  <!-- Plantilla para la información de cada libro -->
  <xsl:template match="book">
    <tr>
      <!-- Título del libro -->
      <td><xsl:value-of select="title"/></td>
      <!-- Autor -->
      <td><xsl:value-of select="author"/></td>
      <!-- Género -->
      <td><xsl:value-of select="genre"/></td>
      <!-- Precio -->
      <td><xsl:text>$</xsl:text><xsl:value-of select="price"/></td>
      <!-- Disponibilidad -->
      <td>
        <xsl:choose>
          <xsl:when test="available='true'">
            <span class="available">Available</span>
          </xsl:when>
          <xsl:otherwise>
            <span class="out-of-stock">Out of Stock</span>
          </xsl:otherwise>
        </xsl:choose>
      </td>
      <!-- Reviews -->
      <td>
        <ul>
          <xsl:apply-templates select="reviews/review"/>
        </ul>
      </td>
    </tr>
  </xsl:template>

  <!-- Plantilla para cada review -->
  <xsl:template match="review">
    <li>
      <xsl:value-of select="concat(user, ': ', comment)"/>
    </li>
  </xsl:template>

</xsl:stylesheet>